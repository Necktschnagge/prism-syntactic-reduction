# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
    exclude:
    - artifacts


stages:
 - stage: prebuild_artifacts
 
   jobs:
    - job: Prism_Cloud
      # This job builds the prism binaries on an ubuntu cloud vm
      # and uploads the binaries back into the git repository.
      # This job is intended to run once to get prism binaries in the repository forever.
      strategy:
        matrix:
          ubuntu_20_04:
            image_name: 'ubuntu-20.04'
            agent_pool_name: 'Azure Pipelines'
      pool:
        vmImage: $(image_name)
        name: $(agent_pool_name)
      
      condition: false # Only enable if new prism binaries are really needed !!!
      timeoutInMinutes: 30
      steps:
       - script: ls /usr/lib/jvm/
         displayName: "check Java install directory"
         condition: succeeded()
       - script: sudo rm -r /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64
         displayName: "Remove Java 11"
         condition: succeeded()
       - script: sudo apt-get install -y openjdk-8-jdk
         displayName: "Install custom Java version"
         condition: succeeded()
       - script: javac -version
         displayName: "Check Java version"
         condition: succeeded()
       - script: cd prism-sttt17/prism/ && make JAVA_DIR=/usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
         displayName: "Build prism"
         condition: succeeded()
       - script: mv prism-sttt17/ ../dumped ### override existing files or not?
         displayName: "Move binaries"
         condition: succeeded()
       - script: ls -R ../dumped ### override existing files or not?
         displayName: "What has been moved?"
         condition: succeeded()
       - script: git checkout artifacts --
         displayName: "git: checkout artifacts"
         condition: succeeded()
       - script: rm -R artifacts/prism-sttt17/ || echo "Nothing to remove." ### override existing files or not?
         displayName: "Remove old build"
         condition: succeeded()
       - script: mv ../dumped artifacts/prism-sttt17/ ### override existing files or not?
         displayName: "Move binaries"
         condition: succeeded()
       - script: sed -i.bak 's#PRISM_DIR="/home/vsts/work/1/s/prism-sttt17/prism"#PRISM_DIR="/home/vsts/work/1/s/artifacts/prism-sttt17/prism"#g' artifacts/prism-sttt17/prism/bin/prism
         displayName: "adapt PRISM_DIR directory"
         condition: succeeded()
       - script: ls -R artifacts/prism-sttt17/ ### override existing files or not?
         displayName: "What has been moved?"
         condition: succeeded()
       - script: rm artifacts/prism-sttt17/.gitignore ### override existing files or not?
         displayName: "remove .gitignore in prism-sttt17"
         condition: succeeded()
       - script: git add artifacts/* 
         displayName: "git: Stage changes"
         condition: succeeded()
       - script: git status
         displayName: "git: status"
         condition: succeeded()
       - script: git -c user.name="CI Agent" -c user.email="ci-agent@example.org" commit -m "prism binaries"
         displayName: "Commit binaries"
         condition: succeeded()
       - script: git push https://$(USER_NAME):$(PERSONAL_ACCESS_TOKEN)@github.com/$(echo "$(git remote get-url origin)" | sed -E 's/https:\/\/\w*.\w*\///' | sed -E 's/\.git//') ${git_branch_artifacts} 
         displayName: "git: push binaries."
         condition: succeeded()

 - stage: build
   dependsOn: prebuild_artifacts
   #condition: false #### remove before merging into master
   jobs:
    - job: Cloud
      strategy:
        matrix:
          ubuntu_20_04:
            image_name: 'ubuntu-20.04'
            agent_pool_name: 'Azure Pipelines'
      
      #    ubuntu_18_04_gcc_8:
      #      image_name: 'ubuntu-18.04'
      #      CC: gcc-8
      #      CXX: g++-8
      #      agent_pool_name: 'Azure Pipelines'
      
      #    ubuntu_16_04_gcc_8:
      #      image_name: 'ubuntu-16.04'
      #      CC: gcc-8
      #      CXX: g++-8
      #      agent_pool_name: 'Azure Pipelines'
      
          mac_10_15:
            image_name: 'macos-10.15'
            agent_pool_name: 'Azure Pipelines'
      #    mac_10_14:
      #      image_name: 'macos-10.14'
      #      agent_pool_name: 'Azure Pipelines'
      
          windows_2019:
            image_name: 'windows-2019'
            agent_pool_name: 'Azure Pipelines'
      #    windows_2016:
      #      image_name: 'vs2017-win2016'
      #      agent_pool_name: 'Azure Pipelines'
      
      pool:
        vmImage: $(image_name)
        name: $(agent_pool_name)
      #condition: false
      timeoutInMinutes: 30
      steps:
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
       - script: sudo apt-get update && sudo apt-get install libboost-all-dev libtbb-dev
         displayName: "Linux: Install Boost"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
       - script: brew install boost
         displayName: "Mac: Install Boost"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Darwin' ))
       - script:  choco install boost-msvc-14.2 #nuget install boost_regex-vc142 -Version 1.76.0
         displayName: "Windows: Install Boost"#
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT'))
       - script: cmake -S . -B ./build/ 
         displayName: "CMake: Create Project"
         condition: succeeded()
       - script: cmake --build ./build
         displayName: "CMake: Compile and Link"
         condition: succeeded()
       - script: ./build/test/TEST-Syntactic-Reducer
         displayName: "Run Tests on Linux / Mac OS"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: .\build\test\Debug\TEST-Syntactic-Reducer.exe
         displayName: "Run Tests on Windows"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))

 - stage: test_and_analyze
   
   dependsOn: build
   
   jobs:
    - job: analyze_multiple_json_configs
      strategy:
        matrix:
          ubuntu_20_04:
            image_name: 'ubuntu-20.04'
            agent_pool_name: 'Azure Pipelines'
      pool:
        vmImage: $(image_name)
        name: $(agent_pool_name)
      condition: eq(variables['Build.Reason'], 'IndividualCI')
      timeoutInMinutes: 180
      steps:      
       - script: ./script/ci/create_runs_for_multiply_configs.sh "$(USER_NAME)" "$(PERSONAL_ACCESS_TOKEN)"
         displayName: "Create all runs for diffrent JSONs"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))

    - job: Test_using_binaries_artifacts
      strategy:
        matrix:
          ubuntu_20_04:
            image_name: 'ubuntu-20.04'
            agent_pool_name: 'Azure Pipelines'
      pool:
        vmImage: $(image_name)
        name: $(agent_pool_name)
      condition: false
      timeoutInMinutes: 180
      steps:
       #Boost
       - script: sudo apt-get update && sudo apt-get install libboost-all-dev
         displayName: "Linux: Install Boost"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
       #real Tasks:
       - script: git checkout artifacts --
         displayName: "Checkout artifacts branch"
         condition: succeeded()
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
       - script: cmake -S . -B ./build/ 
         displayName: "CMake: Create Project"
         condition: succeeded()
       - script: cmake --build ./build
         displayName: "CMake: Compile and Link"
         condition: succeeded()
       - script: ./build/test/TEST-Syntactic-Reducer
         displayName: "Run Tests on Linux / Mac OS"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: .\build\test\Debug\TEST-Syntactic-Reducer.exe
         displayName: "Run Tests on Windows"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
       
       - script: ./build/src/Syntactic-Reducer ./Examples/ireduce/in_family.prism
         displayName: "Reduce in_family.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced in_family.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_in_family.prism
         displayName: "Move in_family artifact"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       
       - script: ./build/src/Syntactic-Reducer ./Examples/debug/bsp.prism
         displayName: "Reduce bsp.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced bsp.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_bsp.prism
         displayName: "Move bsp artifact"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       
       - script: ./build/src/Syntactic-Reducer ./Examples/rewrite_model1_probs_re.pmc
         displayName: "Reduce rewrite_model1_probs_re.pmc"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced rewrite_model1_probs_re.pmc"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_rewrite_model1_probs_re.pmc
         displayName: "Move rewrite_model1_probs_re artifact"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       
   #    - script: |
   #        ls /usr/lib/jvm/
   #        javac -version
   #        cd prism-sttt17/prism/
   #        make JAVA_DIR=/usr/lib/jvm/java-8-openjdk-amd64
   #        chmod +x ./bin/prism
   #      displayName: 'make prism'
   #      condition: succeeded()
   #      
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../artifacts/reduced_rewrite_model1_probs_re.pmc' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g > log.txt
           cat log.txt
         displayName: 'Check reduced rewrite_model1_probs_re.pmc'
         condition: succeeded()
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../Examples/rewrite_model1_probs_re.pmc' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g > log2.txt
           cat log2.txt
         displayName: 'Check original rewrite_model1_probs_re.pmc'
         condition: succeeded()
       
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../artifacts/reduced_bsp.prism' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
         displayName: 'Check reduced bsp.prism'
         condition: succeeded()
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../Examples/debug/bsp.prism' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
         displayName: 'Check original bsp.prism'
         condition: succeeded()
         
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../artifacts/reduced_in_family.prism' -pf 'Pmax=? [ F<25 "deadlock" ]' -mtbdd -cuddmaxmem 10g > ../../../../artifacts/reduced_in_family.prism.log
           cat ../../../../artifacts/reduced_in_family.prism.log
         displayName: 'Check reduced in_family.prism'
         condition: succeeded()
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../Examples/ireduce/in_family.prism' -pf 'Pmax=? [ F<25 "deadlock" ]' -mtbdd -cuddmaxmem 10g > ../../../../artifacts/in_family.prism.log
           cat ../../../../artifacts/in_family.prism.log
         displayName: 'Check original in_family.prism'
         condition: succeeded()
         
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../artifacts/reduced_in_family.prism' -pf 'Pmax=? [ F{reward{"rounds"}<=10} (failure) ]' -mtbdd -cuddmaxmem 10g > ../../../../artifacts/reduced_in_family.prism.rounds.log
           cat ../../../../artifacts/reduced_in_family.prism.rounds.log
         displayName: 'Check reduced in_family.prism'
         condition: succeeded()
       - script: |
           cd artifacts/prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../../Examples/ireduce/in_family.prism' -pf 'Pmax=? [ F{reward{"rounds"}<=10} (failure) ]' -mtbdd -cuddmaxmem 10g > ../../../../artifacts/in_family.prism.rounds.log
           cat ../../../../artifacts/in_family.prism.rounds.log
         displayName: 'Check original in_family.prism'
         condition: succeeded()
         
         
      
      
    - job: Self_Hosted
      strategy:
        matrix:
          Ubuntu 20.04:
            agent_pool_name: 'Performance'
      
      pool:
        vmImage: $(image_name)
        name: $(agent_pool_name)
      timeoutInMinutes: 600
      condition: false
      steps:
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
       - script: cmake -S . -B ./build/ 
         displayName: "CMake: Create Project"
         condition: succeeded()
       - script: cmake --build ./build
         displayName: "CMake: Compile and Link"
         condition: succeeded()
       - script: ./build/test/TEST-Syntactic-Reducer
         displayName: "Run Tests on Linux / Mac OS"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: .\build\test\Debug\TEST-Syntactic-Reducer.exe
         displayName: "Run Tests on Windows"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
   #    - script: chmod +x ./build/src/Syntactic-Reducer
   #      displayName: "chmod +x"
   #      condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
   
       - script: ./build/src/Syntactic-Reducer ./Examples/ireduce/in_family.prism
         displayName: "Reduce in_family.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced in_family.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_in_family.prism
         displayName: "Move in_family artifact"
         
       #- script: cat ./Examples/debug/bsp.prism
   
       - script: ./build/src/Syntactic-Reducer ./Examples/debug/bsp.prism
         displayName: "Reduce bsp.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced bsp.prism"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_bsp.prism
         displayName: "Move bsp artifact"
   
       - script: ./build/src/Syntactic-Reducer ./Examples/rewrite_model1_probs_re.pmc
         displayName: "Reduce rewrite_model1_probs_re.pmc"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: cat reduced_model.prism
         displayName: "Show reduced rewrite_model1_probs_re.pmc"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: mv reduced_model.prism artifacts/reduced_rewrite_model1_probs_re.pmc
         displayName: "Move rewrite_model1_probs_re artifact"
         
         
       - script: |
           ls /usr/lib/jvm/
           javac -version
           cd prism-sttt17/prism/
           make JAVA_DIR=/usr/lib/jvm/java-8-openjdk-amd64
           chmod +x ./bin/prism
         displayName: 'make prism'
         condition: succeeded()
         
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../artifacts/reduced_rewrite_model1_probs_re.pmc' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g > log.txt
         displayName: 'Check reduced rewrite_model1_probs_re.pmc'
         condition: succeeded()
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../Examples/rewrite_model1_probs_re.pmc' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
         displayName: 'Check original rewrite_model1_probs_re.pmc'
         condition: succeeded()
   #    - script: |
   #        cd prism-sttt17/prism/bin/
   #        ls -la
   #        ./prism '../../../Examples/manually_fixed_reduced_rewrite_model1_probs_re.pmc' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
   #      displayName: 'Check manually fixed reduced rewrite_model1_probs_re.pmc'
   #      condition: succeeded()
         
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../artifacts/reduced_bsp.prism' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
         displayName: 'Check reduced bsp.prism'
         condition: succeeded()
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../Examples/debug/bsp.prism' -pf 'filter(printall, Pmax=? [ F<100 "deadlock" ], "init")' -mtbdd -cuddmaxmem 10g
         displayName: 'Check original bsp.prism'
         condition: succeeded()
         
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../artifacts/reduced_in_family.prism' -pf 'Pmax=? [ F<25 "deadlock" ]' -mtbdd -cuddmaxmem 10g > ../../../artifacts/reduced_in_family.prism.log
           cat ../../../artifacts/reduced_in_family.prism.log
         displayName: 'Check reduced in_family.prism'
         condition: succeeded()
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../Examples/ireduce/in_family.prism' -pf 'Pmax=? [ F<25 "deadlock" ]' -mtbdd -cuddmaxmem 10g > ../../../artifacts/in_family.prism.log
           cat ../../../artifacts/in_family.prism.log
         displayName: 'Check original in_family.prism'
         condition: succeeded()
         
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../artifacts/reduced_in_family.prism' -pf 'Pmax=? [ F{reward{"rounds"}<=10} (failure) ]' -mtbdd -cuddmaxmem 10g > ../../../artifacts/reduced_in_family.prism.rounds.log
           cat ../../../artifacts/reduced_in_family.prism.rounds.log
         displayName: 'Check reduced in_family.prism'
         condition: succeeded()
       - script: |
           cd prism-sttt17/prism/bin/
           ls -la
           ./prism '../../../Examples/ireduce/in_family.prism' -pf 'Pmax=? [ F{reward{"rounds"}<=10} (failure) ]' -mtbdd -cuddmaxmem 10g > ../../../artifacts/in_family.prism.rounds.log
           cat ../../../artifacts/in_family.prism.rounds.log
         displayName: 'Check original in_family.prism'
         condition: succeeded()
         
         